{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Score/Score.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","name","src","image","id","onClick","shuffleScoreCard","Wrapper","children","Score","total","status","App","state","smash","clickedSmashIds","score","goal","_this","includes","setState","push","length","console","log","i","j","Math","floor","random","_ref","_this2","this","components_Score_Score","components_Wrapper_Wrapper","map","components_Card_Card","key","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"2mGAUeA,SAPF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,GAAIT,EAAMS,GAC9CC,QAAS,kBAAMV,EAAMW,iBAAiBX,EAAMS,KAAKL,UAAU,oBCDxDQ,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCS1CC,SAPD,SAAAd,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,cAAkCJ,EAAMe,OACxCd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUJ,EAAMgB,kBCDbC,oNAEnBC,MAAQ,CACNC,QACAC,gBAAiB,GACjBC,MAAO,EACPC,KAAM,GACNN,OAAQ,MAIVL,iBAAmB,SAAAF,GACjB,IAAIW,EAAkBG,EAAKL,MAAME,gBAEjC,GAAIA,EAAgBI,SAASf,GAC3Bc,EAAKE,SAAS,CAAEL,gBAAiB,GAAIC,MAAO,EAAGL,OAAQ,wCADzD,CAME,GAFAI,EAAgBM,KAAKjB,GAEU,KAA3BW,EAAgBO,OAGlB,OAFAJ,EAAKE,SAAS,CAAEJ,MAAO,GAAIL,OAAQ,qDAAsDI,gBAAiB,UAC1GQ,QAAQC,IAAI,WAIdN,EAAKE,SAAS,CAAEN,QAAOC,kBAAiBC,MAAOD,EAAgBO,OAAQX,OAAQ,MAE/E,IAAK,IAAIc,EAAIX,EAAMQ,OAAS,EAAGG,EAAI,EAAGA,IAAK,CACzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADCK,EAElB,CAAChB,EAAMY,GAAIZ,EAAMW,IAAvCX,EAAMW,GAFkCK,EAAA,GAE9BhB,EAAMY,GAFwBI,EAAA,8EAOtC,IAAAC,EAAAC,KACP,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,gBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,iDAIFH,EAAAC,EAAAC,cAACmC,EAAD,CAAOvB,MAAOsB,KAAKnB,MAAMG,MACvBC,KAAM,GACNN,OAAQqB,KAAKnB,MAAMF,SAErBf,EAAAC,EAAAC,cAACoC,EAAD,KACGF,KAAKnB,MAAMC,MAAMqB,IAAI,SAAArB,GAAK,OACzBlB,EAAAC,EAAAC,cAACsC,EAAD,CACE9B,iBAAkByB,EAAKzB,iBACvBF,GAAIU,EAAMV,GACViC,IAAKvB,EAAMV,GACXD,MAAOW,EAAMX,mBAtDMmC,cCFjCC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.6c1a605b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = props => (\r\n    <div className='card img-container hover'>\r\n        <img alt={props.name} src={props.image} id={props.id}\r\n            onClick={() => props.shuffleScoreCard(props.id)} className='shuffleScore'/>\r\n            </div>\r\n);\r\n\r\nexport default Card;","import React from 'react';\r\nimport './Wrapper.css';\r\n\r\nconst Wrapper = props => <div className='wrapper'>{props.children}</div>\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Score.css\";\r\n\r\n\r\n//stateless component\r\nconst Score = props => (\r\n  <div className=\"gameScore\">\r\n    <h3 className=\"score\">Your Score {props.total}</h3>\r\n    <h3 className=\"status\">{props.status}</h3>\r\n  </div>\r\n);\r\n\r\nexport default Score;","import React, { Component } from 'react';\nimport Card from './components/Card';\nimport Wrapper from './components/Wrapper';\nimport Score from './components/Score';\nimport smash from './cards.json';\nimport './App.css';\n\nexport default class App extends Component {\n  // Setting this.state.smash to the cards json array\n  state = {\n    smash,\n    clickedSmashIds: [],\n    score: 0,\n    goal: 20,\n    status: \"\"\n  };\n\n  //shuffle the smash cards in the browser when clicked \n  shuffleScoreCard = id => {\n    let clickedSmashIds = this.state.clickedSmashIds;\n\n    if (clickedSmashIds.includes(id)) {\n      this.setState({ clickedSmashIds: [], score: 0, status: 'Game Over! Click to play again.' });\n      return;\n    } else {\n      clickedSmashIds.push(id)\n\n      if (clickedSmashIds.length === 20) {\n        this.setState({ score: 20, status: 'You Super Smashed this match! Click to play again.', clickedSmashIds: [] });\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ smash, clickedSmashIds, score: clickedSmashIds.length, status: ' ' });\n\n      for (let i = smash.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [smash[i], smash[j]] = [smash[j], smash[i]];\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className='App-title'>Clicky Smash</h1>\n          <p className='App-intro'>\n            DO NOT click on the same image twice to win!\n          </p>\n        </header>\n        <Score total={this.state.score}\n          goal={20}\n          status={this.state.status}\n          />\n        <Wrapper>\n          {this.state.smash.map(smash => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={smash.id}\n              key={smash.id}\n              image={smash.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n      );\n    }\n  }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}